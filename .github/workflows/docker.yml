name: Docker CI

on:
  push:
    branches:
      - master

jobs:
  Docker:
    name: ${{ matrix.dockerOS }} ${{ matrix.dockerTag }} ${{ matrix.description }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dockerImage: [ x86_64, armv6l, armv7l, aarch64, rpi-raspbian ]
        dockerTag: [ stretch, buster, bullseye, bookworm ]
        include:
          - dockerImage: x86_64
            dockerOS: Debian
            description: (x86_64)
            os: ubuntu-latest
          - dockerImage: armv6l
            dockerOS: Debian
            description: (Raspberry Pi v1 & ZERO)
            os: ubuntu-latest
          - dockerImage: armv7l
            dockerOS: Debian
            description: (Raspberry Pi 2 & 3)
            os: ubuntu-latest
          - dockerImage: aarch64
            dockerOS: Debian
            description: (Generic AARCH64)
            os: ubuntu-latest
          - dockerImage: rpi-raspbian
            dockerOS: Raspbian
            description:  ""
            os: ubuntu-latest
        exclude:
          # exclude bookworm on armv7l (not available on docker hub on 03.11.2022 URL: https://hub.docker.com/r/balenalib/raspberry-pi2/tags)
          - dockerImage: armv7l
            dockerTag: bookworm

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build and tag docker image
        run: |
          docker build -t ghcr.io/hyperion-project/${{ matrix.dockerImage }}:${{ matrix.dockerTag }} --build-arg SUITE=${{ matrix.dockerTag }} -f ${{ matrix.dockerImage }} .
      - name: Check whether container scanning should be enabled
        id: enabledockerpublish
        env:
            SECRET_DOCKER_CI: ${{ secrets.DOCKER_CI }}
        run: |
            echo "Enable docker publish: ${{ env.SECRET_DOCKER_CI != '' }}"
            echo "::set-output name=enabledockerpublish::${{ env.SECRET_DOCKER_CI != '' }}"
      - name: Publish to GitHub Container/Package Registry
        if: steps.enabledockerpublish.outputs.enabledockerpublish == 'true'
        run: |
          echo ${{ secrets.DOCKER_CI }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/hyperion-project/${{ matrix.dockerImage }}:${{ matrix.dockerTag }}
